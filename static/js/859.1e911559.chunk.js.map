{"version":3,"file":"static/js/859.1e911559.chunk.js","mappings":"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","sources":["components/TrendingList/TrendingList.styled.jsx","components/TrendingList/TrendingList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n`;\n\nexport const Movie = styled.li`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n  text-align: center;\n`;\n\nexport const LinkMovie = styled(Link)`\n  text-decoration: none;\n  color: #242424;\n  transition: color 250ms ease-in-out;\n  &:hover {\n    color: orangered;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  transition: box-shadow 250ms ease-in-out;\n  &:hover {\n    box-shadow: 0px 0px 15px orangered;\n  }\n`;\n\nexport const Text = styled.p`\n  padding: 10px;\n  margin: 0;\n  background-color: #f8f8f8;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { Container } from 'components/App/App.styled';\nimport {\n  MoviesList,\n  Movie,\n  LinkMovie,\n  MovieWrapper,\n  Text,\n} from './TrendingList.styled';\n\nexport default function TrendingList({ items }) {\n  const location = useLocation();\n  let count = 0;\n\n  return (\n    <Container>\n      <MoviesList>\n        {items.map(item => {\n          return (\n            <Movie key={item.id}>\n              <LinkMovie to={`/movies/${item.id}`} state={{ from: location }}>\n                <MovieWrapper>\n                  <div>\n                    <img\n                      loading=\"lazy\"\n                      src={\n                        item.poster_path\n                          ? `https://image.tmdb.org/t/p/original${item.poster_path}`\n                          : `https://picsum.photos/200/300?random=${(count += 1)}`\n                      }\n                      alt={item.title ?? item.name ?? item.original_title}\n                      width=\"200\"\n                      height=\"300\"\n                    />\n                  </div>\n                  <Text>\n                    {item.title ?? item.name ?? item.original_title ?? 'Title'}\n                  </Text>\n                </MovieWrapper>\n              </LinkMovie>\n            </Movie>\n          );\n        })}\n      </MoviesList>\n    </Container>\n  );\n}\n\nTrendingList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n","import { useEffect, useState } from 'react';\n\nimport TrendingList from 'components/TrendingList';\nimport * as API from 'services/api';\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await API.searchTrending();\n        setTrendingMovies(res.results);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, []);\n\n  return (\n    <>\n      <TrendingList items={trendingMovies} />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e4ff78198eeecfb076bc58e389bbf0b9';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["MoviesList","styled","_templateObject","_taggedTemplateLiteral","Movie","_templateObject2","LinkMovie","Link","_templateObject3","MovieWrapper","_templateObject4","Text","_templateObject5","TrendingList","_ref","items","location","useLocation","count","_jsx","Container","children","map","item","_ref2","_item$title","_ref3","_ref4","_item$title2","to","concat","id","state","from","_jsxs","loading","src","poster_path","alt","title","name","original_title","width","height","Home","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","useEffect","fetch","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","API","sent","results","abrupt","t0","console","log","stop","apply","arguments","_Fragment","API_KEY","axios","searchTrending","data","searchMovieId","_callee2","_context2","_x","searchMovieTitle","_callee3","_context3","_x2","castMovie","_callee4","_context4","_x3","reviewsMovie","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}