{"version":3,"file":"static/js/93.0def35ea.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.styled.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const CastPerson = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  overflow: hidden;\n  border-radius: 5px;\n  box-shadow: 0px 0px 4px #242424;\n  max-width: 150px;\n  color: #242424;\n  font-size: 14px;\n`;\n\nexport const CastTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 10px;\n`;\n\nexport const CastDesr = styled.span`\n  font-weight: 300;\n`;\n\nexport const CastName = styled.span`\n  font-weight: 500;\n  font-size: 16px;\n  text-align: center;\n  margin: 5px 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { NoResult } from 'components/Reviews/Reviews.styled';\nimport {\n  CastList,\n  CastPerson,\n  CastTextContainer,\n  CastName,\n  CastDesr,\n} from './Cast.styled';\n\nimport * as API from 'services/api';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n  let count = 0;\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await API.castMovie(id);\n        setCast(res.cast);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetch();\n  }, [id]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(item => (\n            <CastPerson key={item.cast_id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/original${item.profile_path}`\n                    : `https://picsum.photos/200/300?random=${(count += 1)}`\n                }\n                alt={item.character ? item.character : item.original_name}\n                width=\"150\"\n              />\n              <CastTextContainer>\n                <CastDesr>Name</CastDesr>\n                <CastName>{item.name ?? item.original_name ?? 'Name'}</CastName>\n                <CastDesr>Character</CastDesr>\n                <CastName>\n                  {item.character\n                    ? item.character\n                    : item.original_name ?? 'Character'}\n                </CastName>\n              </CastTextContainer>\n            </CastPerson>\n          ))}\n        </CastList>\n      ) : (\n        <NoResult>No results</NoResult>\n      )}\n    </div>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ReviewWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  list-style: none;\n  max-width: 100%;\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 20px;\n  box-shadow: 0px 0px 4px #242424;\n  overflow: hidden;\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nexport const TextContainer = styled.div`\n  padding: 0 20px 10px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const Author = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\nexport const NoResult = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  text-align: center;\n`;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e4ff78198eeecfb076bc58e389bbf0b9';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const searchTrending = async () => {\n  const res = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieId = async id => {\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return res.data;\n};\n\nexport const searchMovieTitle = async title => {\n  const res = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${title}`\n  );\n  return res.data;\n};\n\nexport const castMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return res.data;\n};\n\nexport const reviewsMovie = async id => {\n  const res = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return res.data;\n};\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastPerson","_templateObject2","CastTextContainer","_templateObject3","CastDesr","_templateObject4","CastName","_templateObject5","Cast","_useState","useState","_useState2","_slicedToArray","cast","setCast","id","useParams","count","useEffect","fetch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","API","sent","abrupt","t0","console","log","stop","apply","arguments","_jsx","children","length","map","item","_ref2","_item$name","_item$original_name","_jsxs","src","profile_path","concat","alt","character","original_name","width","name","cast_id","NoResult","ReviewWrapper","ReviewList","Review","TextContainer","Author","_templateObject6","API_KEY","axios","searchTrending","data","searchMovieId","_callee2","_context2","_x","searchMovieTitle","_ref3","_callee3","title","_context3","_x2","castMovie","_ref4","_callee4","_context4","_x3","reviewsMovie","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}